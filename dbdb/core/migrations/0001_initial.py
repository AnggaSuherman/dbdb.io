# Generated by Django 2.0.3 on 2018-03-25 19:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import easy_thumbnails.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CitationUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, unique=True)),
                ('multivalued', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('label',),
            },
        ),
        migrations.CreateModel(
            name='FeatureOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Feature')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=32)),
                ('url', models.URLField(blank=True, max_length=512)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OperatingSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField(blank=True, max_length=500)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProgrammingLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField(blank=True, max_length=500)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('authors', models.CharField(blank=True, max_length=250)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('number', models.IntegerField(default=1, null=True)),
                ('url', models.URLField(blank=True, max_length=500)),
                ('bibtex', models.TextField(blank=True)),
                ('cite', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SuggestedSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('email', models.EmailField(max_length=100)),
                ('approved', models.BooleanField()),
                ('secret_key', models.UUIDField(default=uuid.uuid4)),
                ('url', models.URLField(blank=True, max_length=500)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=64)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('secret_key', models.UUIDField(default=uuid.uuid4)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('ver', models.PositiveIntegerField(default=1, verbose_name='Version No.')),
            ],
            options={
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='SystemFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, help_text='This field supports Markdown Syntax')),
                ('citations', models.ManyToManyField(to='core.CitationUrl')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Feature')),
                ('options', models.ManyToManyField(to='core.FeatureOption')),
            ],
        ),
        migrations.CreateModel(
            name='SystemVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_current', models.BooleanField(default=True)),
                ('developer', models.CharField(blank=True, max_length=500)),
                ('start_year', models.PositiveIntegerField(blank=True, null=True)),
                ('end_year', models.PositiveIntegerField(blank=True, null=True)),
                ('logo', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='logos/')),
                ('tech_docs', models.URLField(blank=True, max_length=500)),
                ('url', models.URLField(blank=True, max_length=500)),
                ('ver', models.PositiveIntegerField(default=1, verbose_name='Version No.')),
                ('description', models.TextField(blank=True, help_text='This field support Markdown Syntax')),
                ('history', models.TextField(blank=True, help_text='This field support Markdown Syntax')),
                ('comment', models.TextField(blank=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('description_citations', models.ManyToManyField(blank=True, related_name='version_descriptions', to='core.CitationUrl')),
                ('end_year_citations', models.ManyToManyField(blank=True, related_name='version_end_years', to='core.CitationUrl')),
                ('history_citations', models.ManyToManyField(blank=True, related_name='version_histories', to='core.CitationUrl')),
            ],
            options={
                'ordering': ('-ver',),
            },
        ),
        migrations.CreateModel(
            name='SystemVersionMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('derived_from', models.ManyToManyField(blank=True, related_name='derived_from_systems', to='core.System', verbose_name='Systems Derived From')),
                ('licenses', models.ManyToManyField(blank=True, related_name='systems_licenses', to='core.License')),
                ('oses', models.ManyToManyField(blank=True, related_name='systems_oses', to='core.OperatingSystem', verbose_name='Operating Systems')),
                ('publications', models.ManyToManyField(blank=True, related_name='systems_publications', to='core.Publication')),
                ('supported_languages', models.ManyToManyField(blank=True, related_name='systems_supported', to='core.ProgrammingLanguage', verbose_name='Supported Languages')),
                ('written_in', models.ManyToManyField(blank=True, related_name='systems_written', to='core.ProgrammingLanguage')),
            ],
        ),
        migrations.AddField(
            model_name='systemversion',
            name='meta',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.SystemVersionMetadata'),
        ),
        migrations.AddField(
            model_name='systemversion',
            name='project_types',
            field=models.ManyToManyField(blank=True, related_name='project_types', to='core.ProjectType', verbose_name='Project Type'),
        ),
        migrations.AddField(
            model_name='systemversion',
            name='start_year_citations',
            field=models.ManyToManyField(blank=True, related_name='version_start_years', to='core.CitationUrl'),
        ),
        migrations.AddField(
            model_name='systemversion',
            name='system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.System'),
        ),
        migrations.AddField(
            model_name='systemfeature',
            name='system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='core.SystemVersion'),
        ),
        migrations.AlterUniqueTogether(
            name='systemversion',
            unique_together={('system', 'ver')},
        ),
        migrations.AlterUniqueTogether(
            name='systemfeature',
            unique_together={('system', 'feature')},
        ),
    ]

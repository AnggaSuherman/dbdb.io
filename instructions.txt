# Clone the repository and checkout to the dev branch

# First, make sure to update MySQL-python
pip install -r requirements.txt

# Create a symlink for the static admin files
ln -s /usr0/local/lib/python2.7/dist-packages/django/contrib/admin/static/admin static/admin


####### Only need to do this once per mysql (Ubuntu) installation #######
# Configure the mysql service (as root user) to use Barracuda for InnoDB, so ROW_FORMAT=DYNAMIC can be used
sudo su
printf '\n[mysqld]\ninnodb_file_format=Barracuda\n' >> /etc/mysql/my.cnf
service mysql restart
exit
################################################################

# To start from scratch, drop the database and recreate it:
mysqladmin drop -u <user> -p dbdb_io
mysqladmin create -u <user> -p dbdb_io

# IMPORTANT - To avoid issues with migrations if you already have migrations for this app:
# Delete all files from systems/migrations EXCEPT for the __init__.py and __init__.pyc files

# Apply migrations:
python manage.py makemigrations
python manage.py migrate

# SystemVersion table has large rows, this is the fix
mysql -u <user> -p -e 'use dbdb_io; alter table systems_systemversion ROW_FORMAT=DYNAMIC;'

# Load system data from current_data/spring2016 folder (do this from within the current_data directory)
python parse_system_data.py

# Load all fixtures - Should say 'Installed 291 object(s) from 8 fixture(s)'
python manage.py loaddata systems/fixtures/*

# Create the super user
python manage.py createsuperuser

# Start the server
python manage.py runserver
